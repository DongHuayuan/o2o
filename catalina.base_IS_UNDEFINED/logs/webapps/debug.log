2018-04-11 11:04:08:888 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[cn.mark.o2o.dao.ProductDao.queryProductList] use [slave] Strategy,SqlCommanType [SELECT] ..
2018-04-11 11:04:08:894 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2018-04-11 11:04:08:916 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product ORDER BY priority DESC LIMIT ?,?; 
2018-04-11 11:04:09:005 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2018-04-11 11:04:09:026 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - <==      Total: 3
2018-04-11 11:04:09:033 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[cn.mark.o2o.dao.ProductDao.queryProductCount] use [slave] Strategy,SqlCommanType [SELECT] ..
2018-04-11 11:04:09:034 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2018-04-11 11:04:09:034 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product 
2018-04-11 11:04:09:034 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - ==> Parameters: 
2018-04-11 11:04:09:036 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - <==      Total: 1
2018-04-11 11:04:09:038 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[cn.mark.o2o.dao.ProductDao.queryProductList] use [slave] Strategy,SqlCommanType [SELECT] ..
2018-04-11 11:04:09:038 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2018-04-11 11:04:09:039 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE product_name like '%测试%' ORDER BY priority DESC LIMIT ?,?; 
2018-04-11 11:04:09:039 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2018-04-11 11:04:09:041 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - <==      Total: 1
2018-04-11 11:05:28:990 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[cn.mark.o2o.dao.ProductDao.queryProductList] use [slave] Strategy,SqlCommanType [SELECT] ..
2018-04-11 11:05:28:992 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2018-04-11 11:05:29:009 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product ORDER BY priority DESC LIMIT ?,?; 
2018-04-11 11:05:29:091 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2018-04-11 11:05:29:108 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - <==      Total: 3
2018-04-11 11:05:29:117 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[cn.mark.o2o.dao.ProductDao.queryProductCount] use [slave] Strategy,SqlCommanType [SELECT] ..
2018-04-11 11:05:29:117 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2018-04-11 11:05:29:117 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product 
2018-04-11 11:05:29:117 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - ==> Parameters: 
2018-04-11 11:05:29:119 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - <==      Total: 1
2018-04-11 11:05:29:122 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[cn.mark.o2o.dao.ProductDao.queryProductList] use [slave] Strategy,SqlCommanType [SELECT] ..
2018-04-11 11:05:29:122 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2018-04-11 11:05:29:122 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE product_name like '%测试%' ORDER BY priority DESC LIMIT ?,?; 
2018-04-11 11:05:29:123 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2018-04-11 11:05:29:126 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductList - <==      Total: 2
2018-04-11 11:05:29:128 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceInterceptor - 设置方法[cn.mark.o2o.dao.ProductDao.queryProductCount] use [slave] Strategy,SqlCommanType [SELECT] ..
2018-04-11 11:05:29:128 [main] DEBUG cn.mark.o2o.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2018-04-11 11:05:29:129 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE product_name like '%测试%' 
2018-04-11 11:05:29:129 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - ==> Parameters: 
2018-04-11 11:05:29:130 [main] DEBUG cn.mark.o2o.dao.ProductDao.queryProductCount - <==      Total: 1
